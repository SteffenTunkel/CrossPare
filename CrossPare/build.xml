<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="dist" name="Crosspare">
	<!-- General Properties -->
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
			
	<!-- Properties for main build -->
	<property name="main.source.location" value="src/main/java" />
	<property name="main.build.location" value="build/main" />
	<property name="main.dependencies.location" value="lib" />
	
	<!-- Properties for JUnit -->
	<property name="test.source.location" value="src/test/java" />
	<property name="test.build.location" value="build/test" />
	<property name="test.dependencies.location" value="lib-test" />
	
	<!-- Properties for Javadoc -->
	<property name="javadoc.location" value="javadoc" />
	
	<!-- Properties for creation of distribution -->
	<property name="dist.location" value="dist" />
	<property name="dist.jarname" value="crosspare.jar" />
	<property name="dist.mainclass" value="de.ugoe.cs.cpdp.Runner" />
		
	<!-- Define classpaths -->
	<path id="main.src.path">
		<pathelement location="${main.source.location}" />
	</path>
	
	<path id="main.classpath">
		<pathelement location="${main.build.location}" />
		<fileset dir="${main.dependencies.location}">
		    <include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
		<pathelement location="${main.build.location}" />
		<fileset dir="${main.dependencies.location}">
		    <include name="*.jar"/>
		</fileset>
		<fileset dir="${test.dependencies.location}">
		    <include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="javadoc.classpath">
		<fileset dir="lib">
		    <include name="*.jar"/>
			<!-- Exclude ojalgo due to bugs in Javadoc -->
		    <exclude name="ojalgo-37.1.jar"/>
		</fileset>
	</path>

	<!-- Initialization Targets -->
	<target name="init.main.build">
		<mkdir dir="${main.build.location}" />
	</target>
	<target name="init.test.build">
		<mkdir dir="${test.build.location}" />
	</target>
	<target name="init.dist">
		<mkdir dir="${dist.location}" />
	</target>
	<target name="init.javadoc">
		<mkdir dir="${javadoc.location}" />
	</target>
	
	<!-- Clean-up Targets -->
	<target name="clean.main.build">
		<delete dir="${main.build.location}" />
	</target>
	<target name="clean.test.build">
		<delete dir="${main.build.location}" />
	</target>
	<target name="clean.dist">
		<delete dir="${dist.location}" />
	</target>
	<target name="clean.javadoc">
		<delete dir="${javadoc.location}" />
	</target>
	<target depends="clean.main.build,clean.test.build,clean.dist,clean.javadoc" name="clean.all" />

	<!-- Build Targets -->
	<target depends="init.main.build" name="main.build">
		<javac debug="false" destdir="${main.build.location}" source="${source}" target="${target}" includeantruntime="false" encoding="UTF-8">
			<src refid="main.src.path" />
			<classpath refid="main.classpath" />
		</javac>
	</target>
	
	<target depends="init.test.build" name="test.build">
		<javac debug="false" destdir="${test.build.location}" source="${source}" target="${target}" includeantruntime="false" encoding="UTF-8">
			<src path="${test.source.location}" />
			<classpath refid="test.classpath" />
		</javac>
	</target>
	
	<!-- Distribution Targets -->
	<target depends="junit,javadoc,init.dist" name="dist">
		<!-- dist of main components, i.e., the console -->
		<pathconvert property="dist.libs" pathsep=" ">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
			<path>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<property name="dist.classpath"	value="${dist.libs}"></property>
		<jar destfile="${dist.location}/${dist.jarname}" basedir="${main.build.location}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${dist.mainclass}" />
				<attribute name="Class-Path" value="${dist.classpath}" />
			</manifest>
		</jar>
		<copy includeemptydirs="false" todir="${dist.location}/lib">
			<fileset dir="${main.dependencies.location}" />
		</copy>
		
		<!-- copy Javadoc to dist -->
		<copy includeemptydirs="false" todir="${dist.location}/javadoc">
			<fileset dir="${javadoc.location}" />
		</copy>
	</target>
	
	<!-- Distribution Targets -->
	<target depends="main.build,init.dist" name="dist-untestedjaronly">
		<!-- dist of main components, i.e., the console -->
		<pathconvert property="dist.libs" pathsep=" ">
			<mapper>
				<chainedmapper>
					<flattenmapper />
					<globmapper from="*" to="lib/*" />
				</chainedmapper>
			</mapper>
			<path>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
			</path>
		</pathconvert>
		<property name="dist.classpath"	value="${dist.libs}"></property>
		<jar destfile="${dist.location}/${dist.jarname}" basedir="${main.build.location}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${dist.mainclass}" />
				<attribute name="Class-Path" value="${dist.classpath}" />
			</manifest>
		</jar>
		<copy includeemptydirs="false" todir="${dist.location}/lib">
			<fileset dir="${main.dependencies.location}" />
		</copy>
	</target>

	<!-- Javadoc Targets -->
	<target depends="init.javadoc" name="javadoc"
		description="o Create Javadocs (Requires Javadoc 1.4+)">
		<javadoc destdir="${javadoc.location}"
			additionalparam="-J-Dorg.apache.commons.attributes.javadoc.CATaglet.sources=${basedir}">
			<classpath refid="javadoc.classpath" />
			<link href="http://download.oracle.com/javase/8/docs/api/" />
			<fileset dir="${main.source.location}" includes="**/*.java" />
		</javadoc>
	</target>
	
	<!-- JUnit Targets -->
	<target depends="main.build,test.build" name="junit">
		<junit printsummary="on" haltonfailure="yes" fork="true">
	        <classpath>
	          <path refid="test.classpath"/>
	          <pathelement location="${test.build.location}"/>
	        </classpath>
	        <formatter type="brief" usefile="false" />
	        <batchtest>
	            <fileset dir="${test.source.location}" includes="**/*Test.java" />
	        </batchtest>
	    </junit>
	</target>
</project>
